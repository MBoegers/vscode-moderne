name: Extension Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile
      run: npm run compile
      
    - name: Lint
      run: npm run lint
      
    - name: Run tests
      run: npm test
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          test-results.xml
          coverage/
        retention-days: 7

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile
      run: npm run compile
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile
      run: npm run compile
      
    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
        
    - name: Run manual test plan validation
      run: |
        echo "Validating that manual test scenarios are covered..."
        npm run test:verbose | grep -E "(TEST-0[0-9][0-9]|✓|×)" > test-coverage.log
        echo "Test coverage validation complete"
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: test-coverage.log
        retention-days: 7